---
import { getCollection } from "astro:content";

import BaseLayout from "../layouts/BaseLayout.astro";

import ContactCTA from "../components/ContactCTA.astro";
import PortfolioPreview from "../components/PortfolioPreview.astro";
import Hero from "../components/Hero.astro";
import Grid from "../components/Grid.astro";

const projects = (await getCollection("work")).sort(
  (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
);
---

<!DOCTYPE html>
<meta charset="UTF-8" />
<html>
  <head>
    <style>
      #cardImages img {
        margin-right: 10px;
      }
      #output {
        font-size: 24px;
        color: red;
        text-align: center;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
      #rule {
        text-align: center;
      }
      #buttoms {
        text-align: center;
      }
      #system {
        text-align: center;
      }
    </style>
  </head>
  <body>
    <BaseLayout
      title="Palais | Wavo Yuropha"
      description="Learn about TY's most recent projects"
    >
      <div class="stack gap-20">
        <main class="wrapper stack gap-8">
          <Hero
            title="Black Jack"
            tagline="Welcome to Lily Palais."
            align="start"
          />
          <div id="buttoms">
            <button id="shuffleButton" onclick="shuffle()">洗牌</button>
            <button id="getTwoCardsButton" onclick="getTwoCards()"
              >首次發牌</button
            >
            <button id="getOneCardButton" onclick="getOneCard()">加1張牌</button
            >
            <button id="totalScoreButton" onclick="totalScore()">總分</button>
            <button
              id="displayRemainingCardsButton"
              onclick="displayRemainingCards()">剩下的牌</button
            >
          </div>
          <p id="rule">
            規則：將網頁重新整理以重新開始，先後按下"洗牌"及"
            首次發牌"，視需要決定是否加牌，如不加牌按下"總分"。
          </p>

          <div id="system">
            <h2>您的手牌:</h2>
            <div id="cardImages"></div>
            <div id="output"></div>
          </div>
        </main>
      </div>
      <script>
        document.addEventListener("DOMContentLoaded", function () {
          // Your JavaScript code here
          var getCardArray = [];
          var getCardArrayX2 = [];
          var cardImages = "";
          var playOneDeck = [];
          var totalScoreValue = 0;
          var cardScores = [
            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 1, 2, 3, 4, 5, 6, 7, 8,
            9, 10, 10, 10, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 1, 2,
            3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10,
          ];
          document
            .getElementById("totalScoreButton")
            .addEventListener("click", function () {
              totalScore();
            });

          document
            .getElementById("shuffleButton")
            .addEventListener("click", function () {
              shuffle();
            });

          document
            .getElementById("getTwoCardsButton")
            .addEventListener("click", function () {
              getTwoCards();
            });

          document
            .getElementById("getOneCardButton")
            .addEventListener("click", function () {
              getOneCard();
            });

          document
            .getElementById("displayRemainingCardsButton")
            .addEventListener("click", function () {
              displayRemainingCards();
            });

          function shuffle() {
            var shuffle52 = document.createElement("p");
            shuffle52.textContent = "牌組: " + cardShuffleX2();
            document.body.appendChild(shuffle52);
          }

          function getTwoCards() {
            var getTwoCardsElement = document.createElement("p");
            getTwoCardsElement.textContent = "您的手牌: " + giveTwoCards();
            document.body.appendChild(getTwoCardsElement);
          }

          function getOneCard() {
            var getOneCardElement = document.createElement("p");
            getOneCardElement.textContent = "您的手牌: " + giveOneCard();
            document.body.appendChild(getOneCardElement);
          }

          function displayRemainingCards() {
            var remainingCardsElement = document.createElement("p");
            remainingCardsElement.textContent = "牌組: " + remainCards();
            document.body.appendChild(remainingCardsElement);
          }

          function totalScore() {
            var myScore = playerScore();
            var scoreElement = document.createElement("p");
            scoreElement.textContent = "總分: " + myScore;
            document.body.appendChild(scoreElement);

            var underScore = "您還可以繼續加牌";
            var equalScore = "您是贏家";
            var overScore = "掰掰";

            var outputElement = document.getElementById("output");
            if (myScore < 21) {
              outputElement.innerHTML = underScore;
            } else if (myScore <= 21) {
              outputElement.innerHTML = equalScore;
            } else {
              outputElement.innerHTML = overScore;
            }
          }

          //生成順序牌
          for (var i = 0; i < 52; i++) {
            getCardArray[i] = i;
          }
          //洗第一次
          function cardShuffle() {
            for (var i = 51; i >= 0; i--) {
              var randomChoose = getCardArray[getRandomInt(i)];
              [getCardArray[i], getCardArray[randomChoose]] = [
                getCardArray[randomChoose],
                getCardArray[i],
              ];
            }
            return getCardArray;
          }
          //洗第二次
          function cardShuffleX2() {
            var getCardArrayX2 = cardShuffle();

            for (var i = 51; i >= 0; i--) {
              var randomChooseX2 = getCardArrayX2[getRandomInt(i)];
              [getCardArrayX2[i], getCardArrayX2[randomChooseX2]] = [
                getCardArrayX2[randomChooseX2],
                getCardArrayX2[i],
              ];
            }
            return getCardArrayX2;
          }

          var getCardArrayX2 = cardShuffleX2();
          var cardImagesContainer = document.getElementById("cardImages");
          //首次發牌
          function giveTwoCards() {
            for (var i = 0; i < 2; i++) {
              if (getCardArrayX2.length >= 2) {
                var selectedCard = getCardArrayX2.shift();
                var cardIndex = selectedCard;
                var imageUrl = `/assets/${cardIndex}.jpg`;
                cardImages += `<img src='${imageUrl}' alt='Card'>`;

                cardImagesContainer.innerHTML = cardImages;

                playOneDeck.push(selectedCard);
              }
            }
            return playOneDeck;
          }
          //加1張牌
          function giveOneCard() {
            if (getCardArrayX2.length >= 1) {
              var selectedCard = getCardArrayX2.shift();
              var cardIndex = selectedCard;
              var imageUrl = `/assets/${cardIndex}.jpg`;

              cardImages += `<img src="${imageUrl}" alt="Card">`;
              cardImagesContainer.innerHTML = cardImages;
              playOneDeck.push(selectedCard);
            }
            return playOneDeck;
          }
          //手牌分數
          function playerScore() {
            totalScoreValue = 0;
            var aceCount = 0;
            for (var i = 0; i < playOneDeck.length; i++) {
              var cardValue = cardScores[playOneDeck[i]];
              totalScoreValue += cardValue; // 更新總分值
              if (cardValue === 1) {
                aceCount++;
              }
              if (totalScoreValue <= 11 && aceCount > 0) {
                totalScoreValue += 10;
              }
            }
            return totalScoreValue;
          }

          function remainCards() {
            var remainingCards = getCardArrayX2;
            return remainingCards;
          }

          function getRandomInt(max) {
            return Math.floor(Math.random() * max);
          }
        });
      </script>
    </BaseLayout>
  </body>
</html>
