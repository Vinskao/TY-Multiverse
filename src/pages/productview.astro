---
import BaseLayout from "../layouts/BaseLayout.astro";
import ProductAjax from "../components/product-ajax.html";
---
<meta charset="UTF-8">
<head>
  <style>
    .left {
      display : block;
      float:left;
      padding: 20px;
      border: 1px solid #ccc;
    }

    .right {
      display: flex;
      padding: 20px;
      border: 1px solid #ccc;
    }
  </style>

</head>
<body>

  <BaseLayout title="About | Tianyi Kao" description="About Tianyi Kao">
    <div class="stack gap-20">
        <main class="wrapper about">
          <!-- Table section -->
          <div id="app" class="left">
            <h3>Product Table</h3>
            <div>
              <button id="findById">findById</button>
              <button id="create">create</button>
              <button id="modify">modify</button>
              <button id="remove">remove</button>
              <button id="find">find</button>
            </div>
            <table id="dataTable">
            </table>
          </div>
          <div class="right">
            <ProductAjax />
          </div>
          <!-- HashMap 或者类似的数据结构，其元素的顺序并不是按照插入的顺序来确定的，而是根据散列算法或其他实现机制来决定的。因此，当你输出或迭代这些元素时，它们的顺序可能与你插入的顺序不一致。 -->

        </main>
      </div>

  </BaseLayout>

  <script type="javascript/text" src="../scripts/product-ajax.js"></script>

  <script type="module" defer>
    import axios from "https://cdn.skypack.dev/pin/axios@v1.6.2-N5VjRwdVe2W3vBaCZP91/mode=imports,min/optimized/axios.js";
    import Swal from "https://cdn.skypack.dev/pin/sweetalert2@v11.10.1-D8C2dVLoCOwuEwfJX6xk/mode=imports,min/optimized/sweetalert2.js";
    

    function handleLoading(promise) {
      Swal.fire({
        text: "Loading.......",
        allowOutsideClick: false,
        showConfirmButton: false,
      });
  
      return promise.finally(() => {
        setTimeout(() => {
          Swal.close();
        }, 500);
      });
    }
    document.addEventListener("DOMContentLoaded", function () {
      const findByIdButton = document.getElementById("findById");
      const createButton = document.getElementById("create");
      const modifyButton = document.getElementById("modify");
      const removeButton = document.getElementById("remove");
      const findButton = document.getElementById("find");
  
      findByIdButton.addEventListener('click', findById);
      createButton.addEventListener('click', create);
      modifyButton.addEventListener('click', modify);
      removeButton.addEventListener('click', remove);
      findButton.addEventListener('click', find);

      function createTable(data) {
        const table = document.getElementById("dataTable");
        table.innerHTML = ""; // Clear existing table content

        // Create header row
        const headerRow = table.insertRow();
        Object.keys(data.list[0]).forEach((key) => {
          const th = document.createElement("th");
          th.textContent = key;
          headerRow.appendChild(th);
        });

        // Create data rows
        data.list.forEach((item) => {
          const row = table.insertRow();
          Object.values(item).forEach((value) => {
            const cell = row.insertCell();
            cell.textContent = value;
          });
        });
      }
  
      function find() {
        console.log("find called");
        let request = {
          start: 0,
          rows: 100,
        };
  
        handleLoading(
          axios
            .post("http://192.168.24.60:8080/pages/ajax/products/find", request)
            .then(function (response) {
              console.log("response", response);
              console.log("count", response.data.count);
              console.log("list", response.data.list);
              if (response.data.list) {
                for (let i = 0; i < response.data.list.length; i++) {
                  console.log(i, response.data.list[i]);
                  createTable(response.data);
                }
              }
            })
            .catch(function (error) {
              console.log("error", error);
              Swal.fire({
                icon: "error",
                text: "查詢錯誤：" + error.message,
                confirmButtonText: "確定",
              });
            })
        );
      }
  
      function remove() {
        console.log("remove called");
        Swal.fire({
          icon: "question",
          text: "確定要刪除嗎？",
          allowOutsideClick: false,
          confirmButtonText: "確定",
          showCancelButton: true,
          cancelButtonText: "取消",
        }).then(function (result) {
          if (result.isConfirmed) {
            let request = {
              // start: 0,
              // rows: 5,
            };
            handleLoading(
              axios
                .delete("http://192.168.24.60:8080/pages/ajax/products/1002", request)
                .then(function (response) {
                  Swal.fire({
                    icon: "success",
                    text: response.data.message,
                    confirmButtonText: "確定",
                  });
                })
                .catch(function (error) {
                  console.log("error", error);
                  Swal.fire({
                    icon: "error",
                    text: "查詢錯誤：" + error.message,
                    confirmButtonText: "確定",
                  });
                })
            );
          } else {
            Swal.fire({
              icon: "error",
              text: "已取消刪除",
              confirmButtonText: "確定",
            });
          }
        });
      }
  
      function modify() {
        console.log("modify called");
        Swal.fire({
          text: "Loading.......",
          allowOutsideClick: false,
          showConfirmButton: false,
        });
  
        let request = {
          id: 1002,
          name: "mini",
          price: 66.78,
          make: "2025-2-3",
          expire: 90667,
        };
  
        handleLoading(
          axios
            .put("http://192.168.24.60:8080/pages/ajax/products/1003", request)
            .then(function (response) {
              console.log("response", response);
              if (response.data.success) {
                Swal.fire({
                  icon: "success",
                  text: response.data.message,
                  confirmButtonText: "確定",
                });
              } else {
                Swal.fire({
                  icon: "error",
                  text: response.data.message,
                  confirmButtonText: "確定",
                });
              }
            })
            .catch(function (error) {
              console.log("error", error);
              Swal.fire({
                icon: "error",
                text: "查詢錯誤：" + error.message,
                confirmButtonText: "確定",
              });
            })
        );
      }
  
      function create() {
        console.log("create called");
        Swal.fire({
          text: "Loading.......",
          allowOutsideClick: false,
          showConfirmButton: false,
        });
  
        let request = {
          id: 1003,
          name: "this is a demo",
          price: 12.34,
          make: "2023-12-18",
          expire: 56,
        };
        handleLoading(
          axios
            .post("http://192.168.24.60:8080/pages/ajax/products", request)
            .then(function (response) {
              console.log("response", response);
              if (response.data.success) {
                Swal.fire({
                  icon: "success",
                  text: response.data.message,
                  confirmButtonText: "確定",
                });
              } else {
                Swal.fire({
                  icon: "error",
                  text: response.data.message,
                  confirmButtonText: "確定",
                });
              }
            })
            .catch(function (error) {
              console.log("error", error);
              Swal.fire({
                icon: "error",
                text: "查詢錯誤：" + error.message,
                confirmButtonText: "確定",
              });
            })
        );
      }
  
      function findById() {
        console.log("findById called");
        Swal.fire({
          text: "Loading.......",
          allowOutsideClick: false,
          showConfirmButton: false,
        });
  
        axios
          .get("http://192.168.24.60:8080/pages/ajax/products/2")
          .then(function (response) {
            console.log("response", response);
            if (response.data.list) {
              console.log("id", response.data.list[0].id);
              console.log("name", response.data.list[0].name);
              console.log("price", response.data.list[0].price);
              console.log("make", response.data.list[0].make);
              console.log("expire", response.data.list[0].expire);
            }
  
            setTimeout(function () {
              Swal.close();
            }, 500);
          })
          .catch(function (error) {
            console.log("error1", error);
            Swal.fire({
              icon: "error",
              text: "查詢錯誤：" + error.message,
              confirmButtonText: "確定",
            });
          });
      }
    });
  </script>
</body>
